{"version":3,"file":"main.d802397435a083efd045.hot-update.js","sources":["webpack:///./stories/index.stories.tsx","webpack:///./stories/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ColorPicker from './index';\r\nimport {ComponentMeta, ComponentStory} from '@storybook/react';\r\n\r\nconst componentMeta:ComponentMeta<typeof ColorPicker> = {\r\n    title: 'Components/common/ColorPicker',\r\n    component: ColorPicker,\r\n};\r\nexport default componentMeta;\r\nexport const Demo: ComponentStory<typeof ColorPicker> = (args)=>{\r\n    const [color, setColor] = React.useState('#000000');\r\n    return (<div>\r\n            <ColorPicker {...args} value={color} onChange={setColor} >\r\n                <svg\r\n                    viewBox=\"0 0 1024 1024\"\r\n                    version=\"1.1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    p-id=\"45653\"\r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                    width=\"14\"\r\n                    height=\"14\"\r\n                >\r\n                    <defs>\r\n                        <style type=\"text/css\"></style>\r\n                    </defs>\r\n                    <path\r\n                        d=\"M904 816H120c-4.4 0-8 3.6-8 8v80c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-80c0-4.4-3.6-8-8-8zM253.7 736h85c4.2 0 8-2.7 9.3-6.8l53.7-166h219.2l53.2 166c1.3 4 5 6.8 9.3 6.8h89.1c1.1 0 2.2-0.2 3.2-0.5 5.1-1.8 7.8-7.3 6-12.4L573.6 118.6c-1.4-3.9-5.1-6.6-9.2-6.6H462.1c-4.2 0-7.9 2.6-9.2 6.6L244.5 723.1c-0.4 1-0.5 2.1-0.5 3.2-0.1 5.3 4.3 9.7 9.7 9.7z m255.9-516.1h4.1l83.8 263.8H424.9l84.7-263.8z\"\r\n                        p-id=\"45654\"></path>\r\n                </svg></ColorPicker>\r\n        </div>\r\n    );\r\n};","import React, {cloneElement, ReactElement, useCallback, useMemo, useRef, useState} from 'react';\r\nexport interface ColorPickerProps{\r\n    value?:string;\r\n    defaultValue?:string;\r\n    onChange?:(value:string)=>void;\r\n    children?:ReactElement\r\n}\r\nexport const ColorPicker:React.FC<ColorPickerProps>=(props)=>{\r\n    const {value, defaultValue, onChange, children} = props;\r\n    const [_value, set_value] = useState<string|undefined>(defaultValue);\r\n    const currentValue = useMemo(()=>value||_value, [value, _value]);\r\n    const handleChange = useCallback((e:React.ChangeEvent<HTMLInputElement>)=>{\r\n        set_value(e.target.value);\r\n        onChange&&onChange(e.target.value);\r\n    }, [onChange]);\r\n    const display = useMemo(()=>children?{display: 'none'}:{display: 'block'}, [children]);\r\n\r\n    const colorRef = useRef<HTMLInputElement>(null);\r\n    const childrenClick = useCallback(()=>{\r\n        colorRef.current?.click();\r\n    }, []);\r\n    const memoChildren = useMemo(()=>children?cloneElement(children, {onClick: childrenClick}):undefined, [children, childrenClick]);\r\n    return <>\r\n        <input ref={colorRef} type={'color'} style={display} value={currentValue} onChange={handleChange}/>\r\n        {memoChildren}\r\n    </>;\r\n};\r\nexport default ColorPicker;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AADA;AAIA;AACA;AAFA;AAZA;AADA;AADA;AAoBA;AAtBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;;;;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;;;;A","sourceRoot":""}